"use client";

import type {Metadata} from "next";
import {Inter} from "next/font/google";
// import ".././globals.css";
import Link from "next/link";
import {usePathname} from "next/navigation";

const inter = Inter({subsets: ["latin"]});

// export const metadata: Metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const pathName = usePathname();
  const liStyle = {
    height: "50px",
    padding: "10px",
    fontSize: "1rem",
    cursor: "pointer",
  };
  const navStyle = {
    height: "50px",
    backgroundColor: "skyblue",
    display: "flex",
    flexWrap: "wrap",
    alignItems: "center",
    paddingLeft: "20px",
  };

  return (
      <div className={inter.className}>
        <ul style={navStyle}>
          <Link
            style={liStyle}
            className={
              pathName.includes("/chatAI/generate/text-with-button")
                ? "font-bold bg-[green] text-white"
                : " text-green"
            }
            href={"/chatAI/generate/text-with-button"}
          >
            Text with Button
          </Link>
          <Link
            style={liStyle}
            className={
              pathName == "/chatAI/generate/text-with-prompt"
                ? "font-bold bg-[green] text-white"
                : " text-green"
            }
            href={"/chatAI/generate/text-with-prompt"}
          >
            Text with Prompt
          </Link>
          <Link
            style={liStyle}
            className={
              pathName == "/chatAI/generate/image-with-prompt"
                ? "font-bold bg-[green] text-white"
                : " text-green"
            }
            href={"/chatAI/generate/image-with-prompt"}
          >
            Image with Prompt
          </Link>
          <Link
            style={liStyle}
            className={
              pathName.includes("/chatAI/stream/text-with-button")
                ? "font-bold bg-[green] text-white"
                : " text-green"
            }
            href={"/chatAI/stream/text-with-button"}
          >
            Stream Text with Button
          </Link>
          <Link
            style={liStyle}
            className={
              pathName.includes("/chatAI/stream/text-with-prompt")
                ? "font-bold bg-[green] text-white"
                : " text-green"
            }
            href={"/chatAI/stream/text-with-prompt"}
          >
            Stream Text with Prompt
          </Link>
          <Link
            style={liStyle}
            className={
              pathName.includes("/chatAI/stream/text-with-image")
                ? "font-bold bg-[green] text-white"
                : " text-green"
            }
            href={"/chatAI/stream/text-with-image"}
          >
            Stream Text with Image
          </Link>
          <Link
            style={liStyle}
            className={
              pathName.includes("/chatAI/tools/tool-call")
                ? "font-bold bg-[green] text-white"
                : " text-green"
            }
            href={"/chatAI/tools/tool-call"}
          >
            Call tools
          </Link>
          <Link
            style={liStyle}
            className={
              pathName.includes("/chatAI/tools/parallel-tool-call")
                ? "font-bold bg-[green] text-white"
                : " text-green"
            }
            href={"/chatAI/tools/parallel-tool-call"}
          >
            Parallel tool calls
          </Link>
          <Link
            style={liStyle}
            className={
              pathName.includes("/chatAI/tools/multiple-step-tool-call")
                ? "font-bold bg-[green] text-white"
                : " text-green"
            }
            href={"/chatAI/tools/multiple-step-tool-call"}
          >
            multiple-step-tool-call
          </Link>

          {/* <Link style={liStyle} href={''}>Review</Link> */}
        </ul>
        <div style={{padding: "20px"}}>.{children}</div>
      </div>
  );
}
